apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: microservice-app
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
        version: v1
    spec:
      containers:
        - name: frontend
          image: nginx:alpine
          ports:
            - containerPort: 80
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              memory: "128Mi"
              cpu: "250m"
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 15
            periodSeconds: 10
          # Puedes montar una página estática personalizada si quieres
          # pero no es necesario para este laboratorio.
          # volumeMounts:
          #   - name: nginx-html
          #     mountPath: /usr/share/nginx/html
      # volumes:
      #   - name: nginx-html
      #     configMap:
      #       name: nginx-index
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: microservice-app
  labels:
    app: frontend
spec:
  type: ClusterIP
  selector:
    app: frontend
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
